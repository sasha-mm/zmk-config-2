/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        f1 {
            bindings = <&kp F1>;
            key-positions = <25 1>;
        };

        f2 {
            bindings = <&kp F2>;
            key-positions = <25 2>;
        };

        f3 {
            bindings = <&kp F3>;
            key-positions = <25 3>;
        };

        f4 {
            bindings = <&kp F4>;
            key-positions = <25 4>;
        };

        f5 {
            bindings = <&kp F5>;
            key-positions = <25 5>;
        };

        f6 {
            bindings = <&kp F6>;
            key-positions = <25 6>;
        };

        f7 {
            bindings = <&kp F7>;
            key-positions = <25 7>;
        };

        f8 {
            bindings = <&kp F8>;
            key-positions = <25 8>;
        };

        f9 {
            bindings = <&kp F9>;
            key-positions = <25 9>;
        };

        f10 {
            bindings = <&kp F10>;
            key-positions = <25 10>;
        };

        f11 {
            bindings = <&kp F11>;
            key-positions = <25 11>;
        };

        boot {
            bindings = <&bootloader>;
            key-positions = <37 40>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <38 29>;
        };

        globe {
            bindings = <&kp GLOBE>;
            key-positions = <39 30>;
        };

        k1 {
            bindings = <&kp NUMBER_1>;
            key-positions = <1 13>;
        };

        k2 {
            bindings = <&kp NUMBER_2>;
            key-positions = <14 2>;
        };

        k3 {
            bindings = <&kp NUMBER_3>;
            key-positions = <15 3>;
        };

        k4 {
            bindings = <&kp NUMBER_4>;
            key-positions = <4 16>;
        };

        k5 {
            bindings = <&kp N5>;
            key-positions = <5 17>;
        };

        k6 {
            bindings = <&kp NUMBER_6>;
            key-positions = <18 6>;
        };

        k7 {
            bindings = <&kp N7>;
            key-positions = <7 19>;
        };

        k8 {
            bindings = <&kp N8>;
            key-positions = <20 8>;
        };

        k9 {
            bindings = <&kp KP_NUMBER_9>;
            key-positions = <21 9>;
        };

        k0 {
            bindings = <&kp N0>;
            key-positions = <10 22>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
